(()=>{"use strict";const e=class{constructor(){this.cells=[],this.ships=[],this.misses=[],this.init()}init(){for(let e=0;e<100;e++)this.cells.push({occupied:!1,attempted:!1,markAsOccupied(){this.occupied=!0},markAsAttempted(){this.attempted=!0}})}isValidPlacement(e,t,s){return this.fitsInCells(e,t,s)&&this.isUnoccupied(e,t,s)}fitsInCells(e,t,s){const i=Math.floor(e/10);return"x"===s&&e%10+t-1<=9||"y"===s&&i+t-1<=9}isUnoccupied(e,t,s){const i="x"===s?e+(t-1):e+10*(t-1);if("x"===s)for(let t=e;t<=i;t++)if(this.cells[t].occupied)return!1;if("y"===s)for(let t=e;t<=i;t+=10)if(this.cells[t].occupied)return!1;return!0}placeShip(e,t,s){if(this.isValidPlacement(e,t,s)){const i=[],a="x"===s?e+(t-1):e+10*(t-1);for(let t=e;t<=a;t+="x"===s?1:10)this.cells[t].markAsOccupied(),i.push(t);const n=new class{constructor(e){this.positions=e,this.length=e.length,this.hits=[]}hit(e){this.hits.includes(e)||this.hits.push(e)}isSunk(){return this.hits.length===this.length}}(i);return this.ships.push(n),!0}}attack(e){if(this.cells[e].markAsAttempted(),this.cells[e].occupied){let t;this.ships.forEach((s=>{s.positions.includes(e)&&(t=s)})),t.hit(e)}else this.misses.push(e)}allShipsSunk(){return this.ships.every((e=>e.isSunk()))}},t=function(){const s=new class{constructor(){const t=new e,s=new e;this.player=new class{constructor(e,t,s){this.name=e,this.playerBoard=t,this.opponentBoard=s,this.shipSizes=[2,3,3,4,5]}playTurn(e){return this.opponentBoard.cells[e].attempted?(console.log(`Cell ${e} has already been attacked`),!1):(this.opponentBoard.attack(e),!0)}}("Player",t,s),this.opponent=new class{constructor(e,t,s){this.name=e,this.opponentBoard=t,this.playerBoard=s,this.shipSizes=[2,3,3,4,5],this.initBoard()}initBoard(){let e=0;for(;this.opponentBoard.ships.length<5&&e<1e3;){const t=this.generateRandomIndex(),s=this.shipSizes[this.opponentBoard.ships.length],i=Math.random()<.5?"x":"y";this.opponentBoard.placeShip(t,s,i),e++}1e3===e&&console.log("Could not find legal placement for all ships.")}generateRandomIndex(){return Math.floor(Math.random()*this.opponentBoard.cells.length)}playTurn(){let e;do{e=this.generateRandomIndex()}while(this.playerBoard.cells[e].attempted);return this.playerBoard.attack(e),e}}("Opponent",s,t),this.isGameOver=!1,this.turn=this.player}checkGameOver(){(this.player.playerBoard.allShipsSunk()||this.opponent.opponentBoard.allShipsSunk())&&(this.isGameOver=!0)}executePlayerTurn(e){if(!this.isGameOver&&this.turn!==this.opponent)return!!this.player.playTurn(e)&&(this.checkGameOver(),this.turn=this.opponent,!0)}executeComputerTurn(){const e=this.opponent.playTurn();return this.checkGameOver(),this.turn=this.player,e}returnWinner(){return this.player.playerBoard.allShipsSunk()?this.opponent:this.player}};new class{constructor(e,t,s){this.game=e,this.player=t,this.opponent=s,this.shipsPlaced=0,this.positions=[],this.axis="x",this.placeShipsModal()}placeShipsModal(){this.openModal("place-ships-modal"),this.generateTempBoard(),this.updateShipMsg();const e=document.getElementById("axis-btn");this.axis="x",e.textContent="X Axis",e.addEventListener("click",(()=>this.changeAxis())),document.getElementById("start-game-btn").addEventListener("click",(()=>{5===this.shipsPlaced&&this.init()}))}generateTempBoard(){const e=document.getElementById("temp-board");e.innerHTML="";for(let t=0;t<100;t++){const s=document.createElement("div");s.dataset.index=t,s.classList.add("cell"),s.addEventListener("mouseover",(()=>this.showPotentialPlacement(t))),s.addEventListener("mouseout",(()=>this.mouseOut(t))),s.addEventListener("click",(()=>this.handlePlacement(t))),e.append(s)}}changeAxis(){const e=document.getElementById("axis-btn");"x"===this.axis?(this.axis="y",e.textContent="Y Axis"):(this.axis="x",e.textContent="X Axis")}updateShipMsg(){document.getElementById("ship-msg").textContent=["Place your destroyer","Place your submarine","Place your cruiser","Place your battleship","Place your carrier","Your fleet is ready!"][this.shipsPlaced]}getShipProperties(e){const t=this.player.shipSizes[this.shipsPlaced],{axis:s}=this;return{length:t,axis:s,end:"x"===s?e+(t-1):e+10*(t-1),step:"x"===s?1:10}}mouseOut(e){const{end:t,step:s}=this.getShipProperties(e);for(let i=e;i<=t;i+=s){const e=document.querySelector(`[data-index="${i}"]`);e&&e.classList.remove("valid-placement")}}showPotentialPlacement(e){const{length:t,axis:s,end:i,step:a}=this.getShipProperties(e);for(let n=e;n<=i;n+=a){const i=document.querySelector(`[data-index="${n}"]`);this.player.playerBoard.isValidPlacement(e,t,s)&&i.classList.add("valid-placement")}}handlePlacement(e){if(5===this.shipsPlaced)return;const{length:t,axis:s,end:i,step:a}=this.getShipProperties(e);if(this.player.playerBoard.placeShip(e,t,s)){this.shipsPlaced++;for(let t=e;t<=i;t+=a){const e=document.querySelector(`[data-index="${t}"]`);e.classList.add("ship"),e.classList.remove("valid-placement")}}this.updateShipMsg()}checkIfShipSunk(e){e.ships.forEach((t=>{t.isSunk()&&t.positions.forEach((t=>{const s=t.toString(),i=e===this.player.playerBoard?"player-board":"opponent-board",a=document.querySelector(`#${i} [data-index="${s}"]`);a&&(a.classList.remove("attempted"),a.classList.remove("hit"),a.classList.remove("ship"),a.classList.add("sunk"))}))}))}renderBoard(e,t){const s=document.getElementById(t);s.innerHTML="",e.cells.forEach(((t,i)=>{const a=document.createElement("div");a.dataset.index=i,a.classList.add("cell"),t.attempted&&(a.classList.add("attempted"),t.occupied&&a.classList.add("hit")),this.player.playerBoard===e?t.occupied&&a.classList.add("ship"):(t.attempted?a.classList.add("invalid"):a.classList.add("valid"),a.addEventListener("click",this.handleCellClick.bind(this))),this.checkIfShipSunk(e),s.appendChild(a)}))}updateBoards(){this.renderBoard(this.player.playerBoard,"player-board"),this.renderBoard(this.opponent.opponentBoard,"opponent-board")}handleCellClick(e){const t=parseInt(e.target.dataset.index);this.game.executePlayerTurn(t)?(this.updateBoards(),this.updateMessage(t),this.game.isGameOver?this.displayWinner():new Promise((e=>{setTimeout((()=>{const t=this.game.executeComputerTurn();this.updateBoards(),this.updateMessage(t),e()}),1e3)})).then((()=>{this.game.isGameOver&&this.displayWinner()}))):this.game.isGameOver||this.displayMessage("You have already fired here!"),console.log("Players board:"),console.log(this.player.playerBoard),console.log("Opponents board:"),console.log(this.opponent.opponentBoard)}updateMessage(e){this.game.turn===this.opponent&&(this.opponent.opponentBoard.cells[e].occupied?this.displayMessage("You fire a shot and...it's a hit!"):this.displayMessage("You fire a shot and...it's a miss!")),this.game.turn===this.player&&(this.player.playerBoard.cells[e].occupied?this.displayMessage("Enemy fires a shot and...it's a hit!"):this.displayMessage("Enemy fires a shot and...it's a miss!"))}displayMessage(e){document.getElementById("turns-msg").textContent=e}displayWinner(){const e=this.game.returnWinner();this.openModal("winner-modal"),document.getElementById("winner-name").textContent=`${e.name} wins!`,document.getElementById("new-game-btn").addEventListener("click",(()=>{this.closeModal("winner-modal"),this.newGame()}))}openModal(e){document.getElementById(e).classList.add("active"),document.getElementById("overlay").classList.add("active")}closeModal(e){document.getElementById(e).classList.remove("active"),document.getElementById("overlay").classList.remove("active")}newGame(){this.resetBoard("player-board"),this.resetBoard("opponent-board"),t()}resetBoard(e){document.getElementById(e).innerHTML=""}init(){this.closeModal("place-ships-modal"),this.updateBoards(),this.displayMessage(`${this.player.name}, take the first shot!`)}}(s,s.player,s.opponent)};document.addEventListener("DOMContentLoaded",t)})();